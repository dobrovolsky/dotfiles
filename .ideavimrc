"""""""""""""""""""""""
" roughly equal to nvim
"""""""""""""""""""""""
set surround
set highlightedyank

" use system clipboard
set clipboard+=unnamed
" highlight matches
set hlsearch
" incremental searching
set incsearch
" searches are case insensitive
set ignorecase
" searches are case sensative only when term has at least one capital
set smartcase
" show line numbers
set number
set relativenumber
" display incomplete commands
set showcmd
" display incomplete commands
set showmode
" keep context on scrolling
set scrolloff=5

" Disable default mappings
let g:EasyMotion_do_mapping = 0
" keep cursor column when JK motion
let g:EasyMotion_startofline=0

"""""""""""""""""""""""
" MAPPINGS
"""""""""""""""""""""""
" https://vim.fandom.com/wiki/Make_search_results_appear_in_the_middle_of_the_screen
nnoremap n nzz
nnoremap N Nzz
nnoremap * *zz
nnoremap # #zz
nnoremap g* g*zz
nnoremap g# g#zz
nnoremap G Gzz

" copy from cursor to end of line
nnoremap Y y$

" Smart way to move between windows
nnoremap <C-j> <C-W>j
nnoremap <C-k> <C-W>k
nnoremap <C-h> <C-W>h
nnoremap <C-l> <C-W>l

" move by line for long lines
nnoremap j gj
nnoremap k gk

" Run last macro with Q
nnoremap Q @@

" don't lose selection when indenting
vnoremap < <gv
vnoremap > >gv

" control is to far away
inoremap <C-e> <C-o>

" clear highlights on search
nnoremap \ :noh<CR>

" With a map leader it's possible to do extra key combinations
" like <leader>w saves the current file
let mapleader = " "

" insert line below cursor
nnoremap <leader>oj o<esc>
" insert line above cursor
nnoremap <leader>ok O<esc>

" clear highlights on search
nnoremap <leader>nn :noh<CR>

" find n chars bellow and buttom
map <Leader>/ <Plug>(easymotion-sn)
" find a char bellow and buttom
map <Leader>ss <Plug>(easymotion-s)
" find 2 chars bellow and buttom
map <Leader>ss <Plug>(easymotion-s2)
" find in current line
map <Leader>l <Plug>(easymotion-lineforward)
map <Leader>h <Plug>(easymotion-linebackward)
" go to line even if numbers is not displayed
map <Leader>j <Plug>(easymotion-j)
map <Leader>k <Plug>(easymotion-k)

"""""""""""""""""""""""
" Ideavim specific
"""""""""""""""""""""""
set ideastatusicon=gray
set ideamarks

" mapleader should be before easymotion https://github.com/AlexPl292/IdeaVim-EasyMotion#mapleader-mapping
set easymotion

" emulate part of tpope/vim-vinegar
map - <Action>(ShowNavBar)

" https://youtrack.jetbrains.com/issue/VIM-2169
" jump betwen 2 last buffers
nnoremap <leader><leader> <c-s-6>

" use similar bindings as for nvim
map <leader>tu <Action>(LocalHistory.ShowHistory)
map <leader>tf <Action>(ToggleDistractionFreeMode)

map <leader>sm <Action>(ShowBookmarks)
map <leader>sf <Action>(GotoFile)
map <leader>sh <Action>(RecentFiles)
map <Leader>sr <Action>(FindInPath)
map <leader>sc <Action>(Vcs.ShowTabbedFileHistory)

" hotkeys for frequent actions
map <leader>sbc <Action>(Vcs.ShowHistoryForBlock)
map <leader>su <Action>(FindUsages)

map <leader>fn <action>(SelectInProjectView)

map <leader>re <Action>(RenameElement)
map <leader>rs <Action>(Run)
map <leader>rf <Action>(RunClass)
map <leader>rc <Action>(ChooseRunConfiguration)

map <leader>ds <Action>(Debug)
map <leader>df <Action>(DebugClass)
map <leader>dc <Action>(ChooseDebugConfiguration)
map <leader>dr <Action>(Resume)
map <leader>db <Action>(ToggleLineBreakpoint)

map <leader>cc <Action>(Stop)

map <leader>aa <Action>(Annotate)

" use idea's back forward instead of vim emulated
map <c-o> <Action>(Back)
map <c-i> <Action>(Forward)

map <leader>q <Action>(CloseContent)
map <leader>w <Action>(Tool_External Tools_black)

map ]s <Action>(GotoNextError)zz
map [s <Action>(GotoPreviousError)zz
map ]f <Action>(MethodDown)zz
map [f <Action>(MethodUp)zz
map zf <Action>(ShowIntentionActions)
map zi <Action>(ShowErrorDescription)

